#!/usr/bin/env python
PACKAGE = "cob_twist_controller"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

damping_method_enum = gen.enum([ 
                       gen.const("manipulability",      int_t, 0, "manipulability"),
                       gen.const("manipulabilityRate",  int_t, 1, "manipulabilityRate"),
                       gen.const("trackingError",       int_t, 2, "trackingError"),
                       gen.const("singularRegion",      int_t, 3, "singularRegion"),
                       gen.const("constant",            int_t, 4, "constant"),
                       gen.const("truncation",          int_t, 5, "truncation")],
                     "enum types for the damping_method")

gen.add("damping_method", int_t, 0, "The damping method to use (edited via an enum)", 5, 0, 5, edit_method=damping_method_enum)

gen.add("eps", double_t, 0, "Value for eps used for truncation",    0.001, 0,   1)
gen.add("damping_factor", double_t, 0, "The constant damping_factor to use",  0.01, 0, 1)
gen.add("lambda0", double_t, 0, "Value for lambda0",  0.05, 0, 1)
gen.add("wt", double_t, 0, "Value for wt (manipulability threshold)",  0.0005, 0, 1)
gen.add("deltaRMax", double_t, 0, "Value for deltaRMax (singular region)",  0.05, 0, 1)

gen.add("base_compensation",   bool_t,   0, "Compensate base motion",  False)
gen.add("base_active",   bool_t,   0, "Command base actively",  False)
gen.add("base_ratio",    double_t, 0, "Value for base_ratio",  0.0, 0, 1)



exit(gen.generate(PACKAGE, "cob_twist_controller", "TwistController"))
